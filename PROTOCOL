==============================
= Proposed Obsidian Protocol =
==============================

Message: MSG_NULL
Server Use: None (Maybe used as a delimiter for packet data later on)
Client Use: None (Maybe used as a delimiter for packet data later on)
Data: None

Message: MSG_WELCOME (reliable)
Server Use: Sent to client upon connection, client should be able to gain an idea of what the game is like from this info.
Client Use: Client will never send this message.
Data: 1 Unsigned 8-bit integer containing the server's protocol version, 1 Unsigned 8-bit integer containing the players id (for consoleplayer), 1 unsigned 8-bit integer containing info about which players are in game (bitmask: player 1 = 1, player 2 = 2, player 3 = 4, etc.)

Message: MSG_POS
Server Use: Update a particular client on the positions of the other clients.
Client Use: Update the server with our current position.
Data: 7 signed 32-bit integers, containing x, y, z, angle, momx, momy, and momz. If the server is sending this, there will be an additional unsigned 8-bit integer containing which player this affects.

Message: MSG_JOIN (reliable)
Server Use: Inform a client of a new client's connection.
Client Use: <none>
Data: 1 unsigned 8-bit integer containing the new client's id.

Message: MSG_USE (reliable)
Server Use: Inform a client that another client used something (lifts, doors, etc).
Client Use: Inform the server that we just used something.
Data: None from the client, but the server will send an unsigned 8-bit integer to use as the player number.

Message: MSG_STATE
Server Use: Inform clients of a sprite state change from another client.
Client Use: Inform the server of a sprite state change we just did.
Data: statenum_t casted to a 16-bit unsigned integer.

Message: MSG_FIRE (reliable)
Server Use: Inform clients that another client fired a weapon.
Client Use: Inform server that we fired a weapon.
Data: weapontype_t casted to an 8-bit integer, 32-bit integer containing the player's "refire" variable.

Message: MSG_DAMAGE (reliable)
Server Use: Inform a client of a player getting damaged.
Client Use: The client will never send this message to the server.
Data: Unsigned 8-bit integer specifying which player to hurt, and a 32-bit integer saying how much to damage the player.

Message: MSG_KILL (reliable)
Server Use: Tell the client that he died.
Client Use: The client will never send this message to the server.
Data: Unsigned 8-bit integer specifying which player died, unsigned 8-bit integer specifying which player killed the client (will be MAXPLAYERS + 1 if they died by environment, etc.)

Message: MSG_RESPAWN (reliable)
Server Use: Inform other clients that a client respawned.
Client Use: Inform the server that we respawned.
Data: Unsigned 8-bit integer with the client's id (server only, client will send no extra data).

Message: MSG_PICKUP (reliable)
Server Use: Inform a client that a client picked up an item.
Client Use: The client will not send this to the server.
Data: Unsigned 8-bit integer with client id, 32-bit integer containing the item's netid.

Message: MSG_WPICKUP (reliable)
Server Use: Inform a client that they picked up a weapon ("staying" weapons only)
Client Use: The client will not send this to the server.
Data: Unsigned 8-bit integer with the weapon's type.
